app:
  name: xxxx
  version: 1.1.0
server:
  port: 8000
  address: 0.0.0.0
logging:
  level: 5  #0 panic 0 fatal 1 error 2 warn 3 info 4 debug 5 trace 6
  report-caller: true
  no-colors: true
  caller-first: true
databases:
  - dsn: root:@tcp(database:3306)/test?parseTime=true
    dialect: 'mysql'
    maxIdle: 10
    maxOpen: 50
    maxLifetime: 50  #单位秒 If d <= 0, connections are reused forever.
    showSQL: true
  - dialect: 'sqlite3'
    dsn: ':memory:'
    maxIdle: 10
    maxOpen: 50
    maxLifetime: 50  #单位秒 If d <= 0, connections are reused forever.
    showSQL: true
  - dsn: "postgres://postgres:123456@postgres:5432/test?sslmode=disable"
    dialect: 'postgres'
    maxIdle: 10
    maxOpen: 50
    maxLifetime: 50  #单位秒 If d <= 0, connections are reused forever.
    showSQL: true
redis:
  mode: simple  #3种模式 1 simple (单机/主从) 2 sentinel 哨兵模式 3 cluster 集群模式 目前支持
  addr: redis:6379
  sentinel:
    # The master name.
    master:
    # A seed list of host:port addresses of sentinel nodes.
    addrs:
      - host1:6379
      - host1:6379
      - host1:6379
    # SentinelUsername two username
    username: a
    # SentinelPassword
    passowrd: b
  cluster:
    #A seed list of host:port addresses of cluster nodes.
    addrs:
      - host1:6379
      - host1:6379
      - host1:6379
    # The maximum number of retries before giving up. Command is retried
    # on network errors and MOVED/ASK redirects.
    # Default is 8 retries.
    max-redirects: 8

    # Enables read-only commands on slave nodes.
    read-only: true
    # Allows routing read-only commands to the closest master or slave node.
    # It automatically enables ReadOnly.
    route-by-latency: true
    # Allows routing read-only commands to the random master or slave node.
    # It automatically enables ReadOnly.
    route-randomly: true
  #Use the specified Username to authenticate the current connection
  username:
  # Optional password. Must match the password specified in the
  # requirepass server configuration option (if connecting to a Redis 5.0 instance, or lower),
  # or the User Password when connecting to a Redis 6.0 instance, or greater,
  # that is using the Redis ACL system.
  password:
  # Database to be selected after connecting to the server.
  db: 0

  # Maximum number of retries before giving up.
  # Default is to not retry failed commands.
  max-retries: 1
  # Minimum backoff between each retry.
  # Default is 8 milliseconds; -1 disables backoff.
  min-retry-backoff: 8ms
  # Maximum backoff between each retry.
  # Default is 512 milliseconds; -1 disables backoff.
  max-retry-backoff:

  # Dial timeout for establishing new connections.
  # Default is 5 seconds.
  dial-timeout: 5s
  # Timeout for socket reads. If reached, commands will fail
  # with a timeout instead of blocking. Use value -1 for no timeout and 0 for default.
  # Default is 3 seconds.
  read-timeout: 3s
  # Timeout for socket writes. If reached, commands will fail
  # with a timeout instead of blocking.
  # Default is ReadTimeout.
  write-timeout: 3s

  # Maximum number of socket connections.
  # Default is 10 connections per every CPU as reported by runtime.NumCPU.
  pool-size: 10
  # Minimum number of idle connections which is useful when establishing
  # new connection is slow.
  min-idle-conns: 5
  # Connection age at which client retires (closes) the connection.
  # Default is to not close aged connections.
  max-conn-age:
  # Amount of time client waits for connection if all connections
  # are busy before returning an error.
  # Default is ReadTimeout + 1 second.
  pool-timeout: 4s
  # Amount of time after which client closes idle connections.
  # Should be less than server's timeout.
  # Default is 5 minutes. -1 disables idle timeout check.
  idle-timeout: 5m
  # Frequency of idle checks made by idle connections reaper.
  # Default is 1 minute. -1 disables idle connections reaper,
  # but idle connections are still discarded by the client
  # if IdleTimeout is set.
  idle-check-frequency: 1m
openapi:
  enabled: true
  spec:
    title: Your service name
    desc: api docs
    contact:
      name: your-name
      email: your-mail
      url: https:#exmaple.org
    license:
      name: test
      url: test
    version: 1.0
  host: localhost
  basePath: /
  schemas:
    - http
    - https
  tags:
    - name: Users
      desc: "User resource"
    - name: Orders
      desc: "Order resource"
  ui:
    api: /apidocs.json
    dist: ./swagger-ui/dist/
    entrypoint: /apidocs/
mail:
  - imap-addr: imap.example.com:993
    smtp-addr: smtp.example.com:465
    tls: true
    username: your-mail
    password: your-mail-pwd
apollo:
  enable: false
  conf:
    appId: 51ac3835-b78b-4217-bbbb-ba34470e4363
    cluster: default
    namespaces:
      - application
    ip: 10.3.30.15:8080